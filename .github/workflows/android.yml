name: Android CI

on:
  pull_request:
    branches-ignore:
      - "l10n_v3_openjdk2"
  push:
    branches-ignore:
      - "l10n_v3_openjdk2"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      SIGNING_KEY_ALIAS: androiddebugkey
      SIGNING_KEY_PASSWORD: android
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Get gl4es latest commit hash
        if: github.ref == 'refs/heads/v3_openjdk'
        id: gl4es-sha
        run: echo "::set-output name=sha::$(echo $(git ls-remote https://github.com/PojavLauncherTeam/gl4es refs/heads/master | grep -io '^\S*'))"
        shell: bash

      - name: Cache gl4es
        if: github.ref == 'refs/heads/v3_openjdk'
        uses: actions/cache@v2
        id: gl4es-cache
        with:
          path: gl4es/libs
          key: gl4es-android-shared-nodbg-test1-2-${{ steps.gl4es-sha.outputs.sha }}

      - name: Get gl4es
        if: github.ref == 'refs/heads/v3_openjdk' && steps.gl4es-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: "ptitSeb/gl4es"
          path: "gl4es"

      - name: Build gl4es
        if: github.ref == 'refs/heads/v3_openjdk' && steps.gl4es-cache.outputs.cache-hit != 'true'
        continue-on-error: true
        run: |
          cd gl4es
          git config --global user.email "github-actions@users.noreply.github.com"
          git config --global user.name "github-actions"
          git remote add upstream https://github.com/PojavLauncherTeam/gl4es
          git fetch upstream
          git checkout master
          git merge --allow-unrelated-histories upstream/master || echo "Merge exit code $?"
          $ANDROID_NDK_HOME/ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=./Android.mk

      - name: Install gl4es
        if: github.ref == 'refs/heads/v3_openjdk' && steps.gl4es-cache.outputs.cache-hit != 'true'
        continue-on-error: true
        run: |
          cp -R gl4es/libs/* app_pojavlauncher/src/main/jniLibs/
          mv gl4es ..
          git add .
          git commit -am "CI: Update gl4es"
          git push

      - name: Get vgpu latest commit hash
        if: github.ref == 'refs/heads/v3_openjdk'
        id: vgpu-sha
        run: echo "::set-output name=sha::$(echo $(git ls-remote https://github.com/PojavLauncherTeam/VGPU refs/heads/main | grep -io '^\S*'))"
        shell: bash

      - name: Cache vgpu
        if: github.ref == 'refs/heads/v3_openjdk'
        uses: actions/cache@v2
        id: vgpu-cache
        with:
          path: vgpu/libs
          key: vgpu-android-shared-1-${{ steps.vgpu-sha.outputs.sha }}

      - name: Get vgpu
        if: github.ref == 'refs/heads/v3_openjdk' && steps.vgpu-cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: "PojavLauncherTeam/VGPU"
          path: "vgpu"

      - name: Build vgpu
        if: github.ref == 'refs/heads/v3_openjdk' && steps.vgpu-cache.outputs.cache-hit != 'true'
        continue-on-error: true
        run: |
          cd vgpu
          $ANDROID_NDK_HOME/ndk-build NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=./Android.mk

      - name: Install vgpu
        if: github.ref == 'refs/heads/v3_openjdk' && steps.vgpu-cache.outputs.cache-hit != 'true'
        run: |
          cp -R vgpu/libs/* app_pojavlauncher/src/main/jniLibs/
          mv vgpu ..
          git config --global user.email "github-actions@users.noreply.github.com"
          git config --global user.name "github-actions"
          git add .
          git commit -am "CI: Update vgpu"
          git push

      - name: Get JRE17
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yml
          path: app_pojavlauncher/src/main/assets/components/jre
          workflow_conclusion: success
          repo: QuestCraftPlusPlus/android-openjdk-build-multiarch
          branch: buildjre17
          name: jre17-pojav

      - name: Clean Artifacts Folder
        run: |
          rm -rf app_pojavlauncher/main/src/assets/artifacts/*

      - name: Build APK with Gradle
        run: |
          chmod +x scripts/languagelist_updater.sh
          bash scripts/languagelist_updater.sh

          mkdir -p out
          chmod +x gradlew
          ./gradlew clean
          # Build JRE JAR files (security manager, etc...)
          ./gradlew :jre_lwjgl3glfw:build
          # mkdir app_pojavlauncher/src/main/assets/components/internal_libs
          # rm app_pojavlauncher/src/main/assets/components/lwjgl3/lwjgl-glfw-classes.jar # removed because causes issues
          # cp jre_lwjgl3glfw/build/libs/jre_lwjgl3glfw-3.2.3.jar app_pojavlauncher/src/main/assets/components/lwjgl3/lwjgl-glfw-classes.jar # removed because causes issues
          
          # Build the launcher
          ./gradlew :app_pojavlauncher:assembleRelease

      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: app-release
          path: app_pojavlauncher/build/outputs/apk/release/app_pojavlauncher-release.apk
